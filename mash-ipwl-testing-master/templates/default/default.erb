init_by_lua '
    local iputils = require("iputils")
    dofile("/etc/nginx/lua_files/ip_whitelist.lua")
    dofile("/etc/nginx/lua_files/range_whitelist.lua")
';

large_client_header_buffers 	<%= @ipwl_atts['large_client_header_buffers'] %>;
proxy_buffer_size               <%= @ipwl_atts['proxy_buffer_size'] %>;
proxy_buffers                   <%= @ipwl_atts['proxy_buffers'] %>;
proxy_busy_buffers_size         <%= @ipwl_atts['proxy_busy_buffers_size'] %>;

variables_hash_max_size 32784;
variables_hash_bucket_size 2048;

server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;
    server_tokens off;

	#root /usr/share/nginx/html;
	#index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;


        location / {
        
        error_page 302 301 /300.html;
        return 302 "<%= @default_url %>";

        access_by_lua '
        
            ngx.log(ngx.ERR, "error: ", " Default site hit. Redirecting.")
            ngx.status = 302
            ngx.header.Location = <%= @default_url %>
            ngx.print("302")
            ngx.exit(302)
        
        ';


        return 301 <%= @default_url %>;

	    }
	    
	    location = /300.html {
        # static
        root /usr/share/nginx/html;
        }
}

server {

        listen 443 default_server;
        ssl on;

        # Make site accessible from http://localhost/
        #server_name solutions.mckinsey.com ipwl2.mckinsey-solutions.com;
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
        ssl_prefer_server_ciphers on;

        #root /usr/share/nginx/html;
        #index index.html index.htm;

        # Make site accessible from http://localhost/
        server_name localhost;
        server_tokens off;

        
        location / {
        
        error_page 302 301 /300.html;
        return 302 "<%= @default_url %>";

        access_by_lua '

            ngx.log(ngx.ERR, "error: ", " Default site hit. Redirecting.")
            ngx.status = 302
            ngx.header.Location = <%= @default_url %>
            ngx.print("302")
            ngx.exit(302)

        ';

        return 301 <%= @default_url %>;


        }

}
